services:
  paperless-rest:
    build:
      context: .
      dockerfile: rest/Dockerfile
    container_name: paperless-rest
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/paperless_DB
      SPRING_DATASOURCE_USERNAME: paperless
      SPRING_DATASOURCE_PASSWORD: paperless
      SPRING_PROFILES_ACTIVE: docker
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: paperless
      SPRING_RABBITMQ_PASSWORD: paperless
      RABBITMQ_PROCESSING_QUEUE: document_processing_queue
      RABBITMQ_RESULT_QUEUE: document_result_queue
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: paperless
      MINIO_SECRET_KEY: paperless
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch
      - minio
    networks:
      - paperless-network

  paperless-ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: paperless-ui
    ports:
      - "80:80"
    depends_on:
      - paperless-rest
    networks:
      - paperless-network

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=paperless
      - POSTGRES_USER=paperless
      - POSTGRES_DB=paperless_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - paperless-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: paperless
      RABBITMQ_DEFAULT_PASS: paperless
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - paperless-network

  minio:
    image: minio/minio:RELEASE.2025-02-07T23-21-09Z
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: paperless
      MINIO_ROOT_PASSWORD: paperless
    volumes:
      - minio-data:/data
    networks:
      - paperless-network

  paperless-services:
    build:
      context: .
      dockerfile: services/Dockerfile
    container_name: paperless-services
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: paperless
      SPRING_RABBITMQ_PASSWORD: paperless
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: paperless
      MINIO_SECRET_KEY: paperless
      RABBITMQ_PROCESSING_QUEUE: document_processing_queue
      RABBITMQ_RESULT_QUEUE: document_result_queue
    ports:
      - "8082:8082"
    volumes:
      - ./tessdata:/usr/share/tesseract-ocr/5.00/tessdata
    depends_on:
      - rabbitmq
      - minio
      - elasticsearch
    networks:
      - paperless-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length
      - logger.level=error
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - paperless-network

networks:
  paperless-network:
    driver: bridge

volumes:
  es-data:
  postgres_data:
  minio-data:
  rabbitmq-data: